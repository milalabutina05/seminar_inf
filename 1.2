N=int(input())
X=[0]*N
Y=[0]*N
Z=[0]*N
for i in range(N):
    X[i]=int(input())
    Y[i]=int(input())
    Z[i]=int(input())
class Vector():
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
    def __abs__(self):
        return (self.x**2 + self.y**2 + self.z**2)**0.5
    def __add__(self, other):
        if isinstance(other, Vector):
            return Vector(self.x+other.x,self.y+other.y,self.z+other.z)
        elif isinstance(other, int) or isinstance(other, float):
            return Vector(self.x+other,self.y+other,self.z+other)
    def __radd__(self, other):
            return self + other
    def __str__(self):
        return f'x = {self.x} y = {self.y} z = {self.z}'
    def __sub__(self,other):
        if isinstance(other, Vector):
            return Vector(self.x-other.x,self.y-other.y,self.z-other.z)
        elif isinstance(other, int) or isinstance(other, float):
            return Vector(self.x-other,self.y-other,self.z-other)
Smax=0.0
for i in range(N):
    for j in range(N):
        for k in range(N):
            v1=Vector(X[i],Y[i],Z[i])
            v2=Vector(X[j],Y[j],Z[j])
            v3=Vector(X[k],Y[k],Z[k])
            a=abs((v1-v2))
            b=abs((v1-v3))
            c=abs((v2-v3))
            p=(a+b+c)/2
            S=(p*(p-a)*(p-b)*(p-c))**0.5
            if (S)>=Smax:
                Smax=S
print(Smax)

